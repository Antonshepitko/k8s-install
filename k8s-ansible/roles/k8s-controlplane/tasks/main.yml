- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ node_name }}"

- name: Disable swap
  ansible.builtin.shell: |
    swapoff -a
    sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: Configure kernel modules
  ansible.builtin.shell: |
    modprobe overlay
    modprobe br_netfilter
  args:
    warn: false

- name: Configure sysctl
  ansible.builtin.copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1

- name: Apply sysctl
  ansible.builtin.command: sysctl --system

- name: Install containerd
  ansible.builtin.apt:
    name: containerd={{ containerd_version }}
    update_cache: yes

- name: Configure containerd
  ansible.builtin.shell: |
    mkdir -p /etc/containerd
    containerd config default | tee /etc/containerd/config.toml
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
    systemctl restart containerd

- name: Add Kubernetes repo
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    filename: kubernetes

- name: Install Kubernetes components
  ansible.builtin.apt:
    name:
      - kubelet={{ k8s_version }}
      - kubeadm={{ k8s_version }}
      - kubectl={{ k8s_version }}
    state: present
    force: yes  # Принудительная установка версии

- name: Initialize Kubernetes control plane
  ansible.builtin.command: kubeadm init --pod-network-cidr={{ pod_network_cidr }} --ignore-preflight-errors=NumCPU

- name: Configure kubectl for user
  ansible.builtin.shell: |
    mkdir -p $HOME/.kube
    cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    chown $(id -u):$(id -g) $HOME/.kube/config

- name: Install Calico CNI
  ansible.builtin.shell: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.4/manifests/calico.yaml